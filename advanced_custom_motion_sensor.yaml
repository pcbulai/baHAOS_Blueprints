blueprint:
  name: Advanced Motion Sensor with Scene Control
  description: >
    An advanced motion sensor automation combining scene and light control. Supports 
    flexible conditions for time, illumination, and sun position. Includes ambient 
    scene activation and automation blockers. Ideal for complex setups where motion 
    detection triggers nuanced lighting responses.

  domain: automation
  source_url: https://github.com/your-repo/advanced_motion_sensor.yaml
  input:
    motion_entity:
      name: Motion Sensor
      description: The motion sensor entity or a group of motion sensors.
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
    light_target:
      name: Light Target
      description: The light(s) to control.
      selector:
        target:
          entity:
            domain: light
    scene_target:
      name: Scene to Activate
      description: The scene to activate when motion is detected.
      selector:
        entity:
          domain: scene
    luminance_sensor:
      name: Illuminance Sensor
      description: Optional illuminance sensor to control lighting based on brightness.
      selector:
        entity:
          domain: sensor
          device_class: illuminance
    luminance_required:
      name: Max Illuminance
      description: Only trigger when illuminance is below this level.
      default: 100
      selector:
        number:
          min: 0
          max: 1000
          unit_of_measurement: lx
    no_motion_wait:
      name: Motion Off Wait Time
      description: Time (in seconds) to wait before turning off lights or activating the ambient scene after no motion is detected.
      default: 120
      selector:
        number:
          min: 0
          max: 600
          unit_of_measurement: seconds
    ambient_scene:
      name: Ambient Scene
      description: Optional scene to activate when no motion is detected.
      selector:
        entity:
          domain: scene
    time_active_start:
      name: Active Start Time
      description: Only activate between these times.
      default: "00:00:00"
      selector:
        time: {}
    time_active_end:
      name: Active End Time
      description: Only activate between these times.
      default: "23:59:59"
      selector:
        time: {}
    elevation_condition:
      name: Sun Position
      description: Trigger only if the sun is above or below the horizon, or always.
      default: Always
      selector:
        select:
          options:
            - Always
            - Above Horizon
            - Below Horizon
    elevation_adjustment:
      name: Sun Elevation Offset
      description: Adjust sun elevation by degrees for more precise triggering.
      default: 0
      selector:
        number:
          min: -90
          max: 90
          unit_of_measurement: degrees
          mode: slider
          step: 1
    automation_blocker:
      name: Automation Blocker
      description: Optional entity to block the automation if in a specific state.
      selector:
        entity: {}
    automation_blocker_state:
      name: Blocker Desired State
      description: The desired state of the automation blocker.
      default: "off"
      selector:
        text: {}

variables:
  motion_entity: !input motion_entity
  light_target: !input light_target
  scene_target: !input scene_target
  luminance_sensor: !input luminance_sensor
  luminance_required: !input luminance_required
  no_motion_wait: !input no_motion_wait
  ambient_scene: !input ambient_scene
  time_active_start: !input time_active_start
  time_active_end: !input time_active_end
  elevation_condition: !input elevation_condition
  elevation_adjustment: !input elevation_adjustment
  automation_blocker: !input automation_blocker
  automation_blocker_state: !input automation_blocker_state

trigger:
  - platform: state
    entity_id: !input motion_entity
    from: "off"
    to: "on"
  - platform: state
    entity_id: !input motion_entity
    from: "on"
    to: "off"
    for:
      seconds: !input no_motion_wait

condition:
  - condition: template
    value_template: >
      {% if automation_blocker is not none %}
        {{ states(automation_blocker) == automation_blocker_state }}
      {% else %}
        true
      {% endif %}
  - condition: or
    conditions:
      - condition: template
        value_template: "{{ elevation_condition == 'Always' }}"
      - condition: template
        value_template: >
          {% set sun_elevation = state_attr('sun.sun', 'elevation') | float %}
          {% set adjusted_elevation = sun_elevation - elevation_adjustment | float %}
          {% if elevation_condition == 'Above Horizon' %}
            {{ adjusted_elevation > 0 }}
          {% elif elevation_condition == 'Below Horizon' %}
            {{ adjusted_elevation <= 0 }}
          {% endif %}
  - condition: numeric_state
    entity_id: !input luminance_sensor
    below: !input luminance_required
  - condition: time
    after: !input time_active_start
    before: !input time_active_end

action:
  - choose:
      - conditions:
          - condition: state
            entity_id: !input motion_entity
            state: "on"
        sequence:
          - service: scene.turn_on
            target:
              entity_id: !input scene_target
      - conditions:
          - condition: state
            entity_id: !input motion_entity
            state: "off"
        sequence:
          - choose:
              - conditions:
                  - "{{ ambient_scene is not none }}"
                sequence:
                  - service: scene.turn_on
                    target:
                      entity_id: !input ambient_scene
            default:
              - service: light.turn_off
                target: !input light_target
mode: restart
max_exceeded: silent
